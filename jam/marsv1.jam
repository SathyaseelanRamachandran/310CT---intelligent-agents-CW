GOALS:
	ACHIEVE explore;
	
FACTS:
	FACT base 0 0; //base location
	FACT rock "4" 3 2;
	FACT rock "3" 2 6;
	FACT rock "2" 5 3;
	FACT rock "1" 6 1;
	FACT rock4w 7 5;
	FACT position 0 0;
	FACT waterLocated 0;
	FACT counter 0;
	
PLAN:	{
	NAME:	"explore mars"
	GOAL:
		ACHIEVE explore;
	BODY:
		RETRIEVE position $x $y;
		RETRIEVE rock4w $x4 $y4;
		RETRIEVE counter $c;
		
		WHILE : TEST(!= $x 10) {
		
		WHILE : TEST(< $y 10) {
			ASSIGN $y (+ $y 1);
			ASSERT position $x $y;
			EXECUTE println "up";
			EXECUTE println "current position:"$x" "$y;
			PERFORM waterRock;
			PERFORM avoidRockUp;
			RETRIEVE position $x $y;
			};
			
		RETRIEVE position $x $y;
		ASSIGN $x (+ $x 1);
		ASSERT position $x $y;
		EXECUTE println "right";
		EXECUTE println "current position:"$x" "$y;
			
		WHILE : TEST(> $y 0) {
			ASSIGN $y (- $y 1);
			ASSERT position $x $y;
			EXECUTE println "down";
			EXECUTE println "current position:"$x" "$y;
			PERFORM waterRock;
			PERFORM avoidRockDown;
			RETRIEVE position $x $y;
			};
			
		RETRIEVE position $x $y;
		ASSIGN $x (+ $x 1);
		ASSERT position $x $y;
		EXECUTE println "right";
		EXECUTE println "current position:"$x" "$y;	
		};
}
PLAN: {
    NAME: "rockCheck"
    GOAL:
        ACHIEVE avoidRockDown;
    BODY:
        RETRIEVEALL $d rock $rock $a $b;
		RETRIEVE position $x $y;
		
		ASSIGN $q 0;
        WHILE : TEST (< $q 4)
	    {
        NEXTFACT $d rock $rock $a $b;
        EXECUTE println "rock: "$rock "   ""x:" $a "y:" $b;
		
		WHEN : TEST (== $x $a)
		{
			WHEN : TEST (== $y $b)
			{
			EXECUTE println "rock detected at: " "x:"$x "y:"$y;
			ASSIGN $x (- $x 1);
			ASSERT position $x $y;
			EXECUTE println "left";
			ASSIGN $y (- $y 2);
			ASSERT position $x $y;
			EXECUTE println "down";
			EXECUTE println "down";
			ASSIGN $x (+ $x 1);
			ASSERT position $x $y;
			EXECUTE println "right";
			};
		};
	    ASSIGN $q (+ $q 1);
		};
UTILITY:
        10; //any value just to ensure it will always be 
            //selected first (while context holds)
    FAILURE:
	EXECUTE println "failed to go around rock " $q;
}

PLAN: {
    NAME: "rockCheck"
    GOAL:
        ACHIEVE avoidRockUp;
    BODY:
        RETRIEVEALL $d rock $rock $a $b;
		RETRIEVE position $x $y;
		
		ASSIGN $q 0;
        WHILE : TEST (< $q 4)
	    {
        NEXTFACT $d rock $rock $a $b;
        EXECUTE println "rock: "$rock "   ""x:" $a "y:" $b;
		
		WHEN : TEST (== $x $a)
		{
			WHEN : TEST (== $y $b)
			{
			EXECUTE println "rock detected at: " "x:"$x "y:"$y;
			ASSIGN $x (- $x 1);
			ASSERT position $x $y;
			EXECUTE println "left";
			ASSIGN $y (+ $y 2);
			ASSERT position $x $y;
			EXECUTE println "down";
			EXECUTE println "down";
			ASSIGN $x (+ $x 1);
			ASSERT position $x $y;
			EXECUTE println "right";
			};
		};
	    ASSIGN $q (+ $q 1);
		};
UTILITY:
        10; //any value just to ensure it will always be 
            //selected first (while context holds)
    FAILURE:
	EXECUTE println "failed to go around rock " $q;
}

PLAN:	{
	
	NAME:	"Water_Found"
	GOAL:
		ACHIEVE waterRock;
	BODY:
		RETRIEVE rock4w $x4 $y4;
		RETRIEVE position $x $y;
		OR {
			TEST(== $x $x4);
		OR {
			TEST(== $y $y4);
			EXECUTE println "Water rock found at position: "$x", "$y;
			EXECUTE println "Picking up rock";
			PERFORM returnToBase;
		}
		{	
		RETRIEVE rock4w $x4 $y4;
		};
		}
		{
			RETRIEVE rock4w $x4 $y4;
		}; 
	FAILURE:
		EXECUTE println "no water here";
}

PLAN:	{
	NAME:	"return_base"
	GOAL:
		ACHIEVE returnToBase;
	BODY:
		RETRIEVE position $x $y;
		RETRIEVE rock4w $x4 $y4;
		RETRIEVE counter $c;
		
		WHILE : TEST(> $y 0) //if y is not 0 it does the following
		{
		ASSIGN $y (- $y 1); //take 1 from y
		ASSERT position $x $y; //new robot position
		ASSIGN $y4 (- $y 1); //take 1 from y
		ASSERT rock4w $x4 $y4; //new waterrock position
		EXECUTE println "Rover with rock at: "$x" "$y; 
		};
	
		WHILE : TEST(> $x 0)
		{
		ASSIGN $x (- $x 1);
		ASSERT position $x $y;
		ASSIGN $x4 (- $x 1);
		ASSERT rock4w $x4 $y4;
		EXECUTE println "Rover with rock at: " $x" "$y;
		};
		RETRIEVE position $x $y;
		ASSIGN $c (+ $c 9999);
		ASSERT counter $c;
		EXECUTE println "At base with water rock";
		EXECUTE println "returning to previous position to ensure no more rocks exist";
}